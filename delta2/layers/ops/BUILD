load("//tensorflow:tensorflow.bzl",  "tf_custom_op_library")
tf_custom_op_library(name = "x_ops.so", 
srcs = ["kernels/framepow_op.cc",
"kernels/mfcc_dct.cc",
"kernels/mfcc_mel_filterbank.cc",
"kernels/ngram_op.cc",
"kernels/pitch.cc",
"kernels/pitch_op.cc",
"kernels/plp.cc",
"kernels/plp_op.cc",
"kernels/simple_vocab.cc",
"kernels/simple_vocab_op.cc",
"kernels/spectrum.cc",
"kernels/spectrum_op.cc",
"kernels/string_utils_op.cc",
"kernels/support_functions.cc",
"kernels/synthfiltbank.cc",
"kernels/synthfiltbank_op.cc",
"kernels/tokenizer_ops.cc",
"kernels/x_ops.cc",
"kernels/zcr.cc",
"kernels/zcr_op.cc",
"kernels/framepow.cc",
"kernels/analyfiltbank.cc",
"kernels/analyfiltbank_op.cc",
"kernels/cepstrum_op.cc",
"kernels/delta_delta.cc",
"kernels/delta_delta_op.cc",
"kernels/fbank.cc",
"kernels/fbank_op.cc",
"kernels/jieba_op.cc",
"kernels/cepstrum.cc",
"kernels/framepow.h",
"kernels/mfcc_dct.h",
"kernels/mfcc_mel_filterbank.h",
"kernels/pitch.h",
"kernels/plp.h",
"kernels/simple_vocab.h",
"kernels/spectrum.h",
"kernels/support_functions.h",
"kernels/synthfiltbank.h",
"kernels/zcr.h",
"kernels/cepstrum.h",
"kernels/analyfiltbank.h",
"kernels/complex_defines.h",
"kernels/delta_delta.h",
"kernels/fbank.h",
"cppjieba/include/cppjieba/Jieba.hpp",
"cppjieba/include/cppjieba/QuerySegment.hpp",
"cppjieba/deps/limonp/Logging.hpp",
"cppjieba/include/cppjieba/DictTrie.hpp",
"cppjieba/deps/limonp/StringUtil.hpp",
"cppjieba/deps/limonp/StdExtension.hpp",
"cppjieba/include/cppjieba/Unicode.hpp",
"cppjieba/deps/limonp/LocalVector.hpp",
"cppjieba/include/cppjieba/Trie.hpp",
"cppjieba/include/cppjieba/SegmentBase.hpp",
"cppjieba/include/cppjieba/PreFilter.hpp",
"cppjieba/include/cppjieba/FullSegment.hpp",
"cppjieba/include/cppjieba/MixSegment.hpp",
"cppjieba/include/cppjieba/MPSegment.hpp",
"cppjieba/include/cppjieba/SegmentTagged.hpp",
"cppjieba/include/cppjieba/PosTagger.hpp",
"cppjieba/include/cppjieba/HMMSegment.hpp",
"cppjieba/include/cppjieba/HMMModel.hpp",
"cppjieba/include/cppjieba/KeywordExtractor.hpp"], 
copts = ["-Itensorflow/core/user_ops/ops",
"-Itensorflow/core/user_ops/ops/cppjieba/include",
"-Itensorflow/core/user_ops/ops/cppjieba/deps"])
